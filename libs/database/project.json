{
  "name": "database",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "libs/database/src",
  "projectType": "library",
  "targets": {
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["libs/database/**/*.ts"]
      }
    },
    "generate": {
      "command": "pnpm prisma generate --schema=libs/database/prisma/schema.prisma"
    },
    "generate-proxy": {
      "command": "pnpm prisma generate --data-proxy --schema=libs/database/prisma/schema-data-proxy.prisma"
    },
    "migrate": {
      "command": "pnpm prisma migrate --schema=libs/database/prisma/schema.prisma"
    },
    "pull": {
      "command": "pnpm prisma db pull --schema=libs/database/prisma/schema.prisma"
    },
    "push": {
      "command": "pnpm prisma db push --schema=libs/database/prisma/schema.prisma"
    },
    "deploy": {
      "command": "pnpm prisma migrate deploy --schema=libs/database/prisma/schema.prisma"
    },
    "status": {
      "command": "pnpm prisma status --schema=libs/database/prisma/schema.prisma"
    },
    "format": {
      "command": "pnpm prisma format --schema=libs/database/prisma/schema.prisma"
    },
    "format-proxy": {
      "command": "pnpm prisma format --schema=libs/database/prisma/schema-data-proxy.prisma"
    },
    "validate": {
      "command": "pnpm prisma validate --schema=libs/database/prisma/schema.prisma"
    },
    "validate-proxy": {
      "command": "pnpm prisma validate --schema=libs/database/prisma/schema-data-proxy.prisma"
    },
    "studio": {
      "command": "pnpm prisma studio --schema=libs/database/prisma/schema.prisma"
    }
  },
  "tags": []
}
